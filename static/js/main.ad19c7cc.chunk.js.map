{"version":3,"sources":["Components/Navigation.jsx","Components/Card.jsx","Components/About.jsx","Components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","Navbar","variant","Container","Brand","href","Collapse","className","Text","onClick","Card","src","img","name","description","url","target","sourceCode","About","projects","id","App","React","useState","setPage","portfolioBool","setPortfolioBool","aboutBool","setAboutBool","contactBool","setContactBool","listOfProjects","map","project","pageChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad19c7cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Navigation.css\";\r\n\r\nexport default function Navigation(props) {\r\n  return (\r\n    <Navbar variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">Abhi Setia - Full-Stack Developer </Navbar.Brand>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text className=\"links\" onClick={() => {props.onClick('portfolio')}}>\r\n            Portfolio &nbsp; &nbsp;\r\n          </Navbar.Text>\r\n          <Navbar.Text className=\"links\" onClick={() => {props.onClick('about')}}>\r\n             About &nbsp; &nbsp;\r\n          </Navbar.Text>\r\n          <Navbar.Text className=\"links\" onClick={() => {props.onClick('contact')}}>\r\n            Contact\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='Container'> \r\n            <img src={props.img} />\r\n            <div className='Project'>\r\n                <header>\r\n                    <h1>{props.name}</h1>\r\n                </header>\r\n                <p> {props.description} </p>\r\n                <h6><a href={props.url} target=\"_blank\">Visit Site</a></h6>\r\n                <h6><a href={props.sourceCode} target=\"_blank\">Source Code</a></h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className='about'>\r\n\r\n        {/* <img className='uglyImage' src='https://avatars3.githubusercontent.com/u/56317276?s=400&u=c560973e56f66a6a2ba9c49aa6e3cd6f904181a7&v=4' /> */}\r\n\r\n        <h1>Welcome! I'm Abhi Setia</h1>\r\n        <br></br>\r\n        <h3>My mission is to help startup and SMEs with web services which are robust, sustainable, and ready to scale.</h3>\r\n        <br></br>\r\n        <p>Right now I'm sure you're wondering if you've found someone that's able to quickly integrate into your workspace and work well with the team.</p>\r\n        <br></br>\r\n        <p>I've worked at startups and SMEs in my previous career for a little over two years and have been able to quickly integrate and contribute to corporate goals immediately. \r\n            Furthermore, I've spent three months, 12 hours per day learning full-stack development at Lighthouse Labs bootcamp. During the bootcamp, I learned to become proficient in Javascript, Ruby, HTML, CSS, ReactJS, NodeJS, jQuery, \r\n            Ajax, Sass, PostgreSQL, Mocha and Chai, Storybook, and linux. The only reason this was possible was because we spent the three months building real-world applications \r\n            with mentorship support. We were expected to write clean code and work in teams, as well as individually in order to simulate a real world working environment.\r\n        </p>\r\n        <br></br>\r\n        <p> I believe by going through this experience and learning to quickly integrate into different environments and produce results immediately, I am able to save hiring costs\r\n             for companies seeking a developer. </p>\r\n             <br></br>\r\n        <p>You can find my github with my completed projects <a href=\"https://www.github.com/alextheprogrammer21\" target=\"_blank\">here</a></p>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Contact.css\";\r\n\r\n\r\nexport default function About() {\r\n    return (\r\n        <p>For all inquiries: <a href=\"mailto:abhisetia0@gmail.com\">abhisetia0@gmail.com</a></p>\r\n\r\n    )\r\n}","//Created By Alex Setia\n//June 27, 2020\n//My Personal Portfolio\n\nimport React from 'react';\nimport Navigation from './Components/Navigation';\nimport Footer from './Components/Footer';\nimport Card from './Components/Card'\nimport About from './Components/About';\nimport Contact from './Components/Contact';\nimport './App.css';\n\nconst projects = [\n  {id: 1, name: 'KnightsMM Web Development', url: 'https://knightsmm.com/', sourceCode: 'https://knightsmm.com/', description: 'Customized web applications business website.', img: 'https://raw.githubusercontent.com/alextheprogrammer21/Portfolio/master/images/KnightsMM.PNG'},\n  {id: 2, name: 'Re:Mind', url: 'https://alextheprogrammer21.github.io/Re-Mind/', sourceCode: 'https://github.com/alextheprogrammer21/Re-Mind', description: 'A wellness app for habit tracking.', img: \"https://raw.githubusercontent.com/alextheprogrammer21/Re-Mind/master/images/1.PNG\"},\n  {id: 3, name: 'Interview Scheduler', url: 'https://alextheprogrammer21.github.io/Interview-Scheduler-Hardcoded/', sourceCode: 'https://github.com/alextheprogrammer21/Interview-Scheduler', description: 'A scheduler that allows users to set up, edit, or delete appointments.', img: \"https://raw.githubusercontent.com/alextheprogrammer21/Interview-Scheduler/master/public/images/Screenshot0.png\"},\n  {id: 4, name: 'Devware', url: 'https://alextheprogrammer21.github.io/Devware/', sourceCode: 'https://github.com/alextheprogrammer21/Devware', description: 'People make software to sell to you. People make freeware to give away to you. There is also a vast sea of open source projects hidden to the average user that developers make for various reasons. I call these devwares. Devware allows users to search for and download devware applications for free.', img: \"https://raw.githubusercontent.com/alextheprogrammer21/Devware/master/src/images/1.PNG\"}  \n]\n\nfunction App() {\n\n  let [page, setPage] = React.useState('portfolio');\n  let [portfolioBool, setPortfolioBool] = React.useState(true);\n  let [aboutBool, setAboutBool] = React.useState(false);\n  let [contactBool, setContactBool] = React.useState(false);\n\n  const listOfProjects = projects.map((project) => {\n    return (\n      <Card\n        name={project.name}\n        url={project.url}\n        sourceCode={project.sourceCode}\n        img={project.img}\n        description={project.description}\n      />\n    );\n  });\n\n  function handlePageChange(pageChange) {\n\n    setAboutBool(false)\n    setContactBool(false)\n    setPortfolioBool(false)\n\n    if (pageChange === 'portfolio') {\n      setPortfolioBool(true)\n    } else if (pageChange === 'about') {\n      setAboutBool(true)\n    } else if (pageChange === 'contact') {\n      setContactBool(true)\n    }\n    setPage(pageChange);\n  }\n\n  return (\n    <div className=\"App\">\n            <Navigation\n            onClick={handlePageChange}\n            ></Navigation>\n      <header className=\"App-header\">\n        <p className='cards'>\n        {portfolioBool ? listOfProjects : <div> </div>}\n        {aboutBool ? <About></About> : <div> </div>}\n        {contactBool ? <Contact></Contact> : <div> </div>}\n        </p>\n      </header>\n      {/* <div class=\"footer\">Â© 2020, Built by me using React :) </div> */}\n\n      {/* <Footer></Footer> */}\n      {/* <footer>\n  <p>Â© 2020. Made by Abhi Setia</p>\n  <p>Contact: <a href=\"mailto:abhisetia0@gmail.com\">abhisetia0@gmail.com</a></p>\n</footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}